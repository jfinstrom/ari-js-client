/**
 * localhost:8088
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 6.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Localhost8088);
  }
}(this, function(expect, Localhost8088) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Localhost8088.RTPstat();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('RTPstat', function() {
    it('should create an instance of RTPstat', function() {
      // uncomment below and update the code to test RTPstat
      //var instane = new Localhost8088.RTPstat();
      //expect(instance).to.be.a(Localhost8088.RTPstat);
    });

    it('should have the property channelUniqueid (base name: "channel_uniqueid")', function() {
      // uncomment below and update the code to test the property channelUniqueid
      //var instane = new Localhost8088.RTPstat();
      //expect(instance).to.be();
    });

    it('should have the property localMaxjitter (base name: "local_maxjitter")', function() {
      // uncomment below and update the code to test the property localMaxjitter
      //var instane = new Localhost8088.RTPstat();
      //expect(instance).to.be();
    });

    it('should have the property localMaxrxploss (base name: "local_maxrxploss")', function() {
      // uncomment below and update the code to test the property localMaxrxploss
      //var instane = new Localhost8088.RTPstat();
      //expect(instance).to.be();
    });

    it('should have the property localMinjitter (base name: "local_minjitter")', function() {
      // uncomment below and update the code to test the property localMinjitter
      //var instane = new Localhost8088.RTPstat();
      //expect(instance).to.be();
    });

    it('should have the property localMinrxploss (base name: "local_minrxploss")', function() {
      // uncomment below and update the code to test the property localMinrxploss
      //var instane = new Localhost8088.RTPstat();
      //expect(instance).to.be();
    });

    it('should have the property localNormdevjitter (base name: "local_normdevjitter")', function() {
      // uncomment below and update the code to test the property localNormdevjitter
      //var instane = new Localhost8088.RTPstat();
      //expect(instance).to.be();
    });

    it('should have the property localNormdevrxploss (base name: "local_normdevrxploss")', function() {
      // uncomment below and update the code to test the property localNormdevrxploss
      //var instane = new Localhost8088.RTPstat();
      //expect(instance).to.be();
    });

    it('should have the property localSsrc (base name: "local_ssrc")', function() {
      // uncomment below and update the code to test the property localSsrc
      //var instane = new Localhost8088.RTPstat();
      //expect(instance).to.be();
    });

    it('should have the property localStdevjitter (base name: "local_stdevjitter")', function() {
      // uncomment below and update the code to test the property localStdevjitter
      //var instane = new Localhost8088.RTPstat();
      //expect(instance).to.be();
    });

    it('should have the property localStdevrxploss (base name: "local_stdevrxploss")', function() {
      // uncomment below and update the code to test the property localStdevrxploss
      //var instane = new Localhost8088.RTPstat();
      //expect(instance).to.be();
    });

    it('should have the property maxrtt (base name: "maxrtt")', function() {
      // uncomment below and update the code to test the property maxrtt
      //var instane = new Localhost8088.RTPstat();
      //expect(instance).to.be();
    });

    it('should have the property minrtt (base name: "minrtt")', function() {
      // uncomment below and update the code to test the property minrtt
      //var instane = new Localhost8088.RTPstat();
      //expect(instance).to.be();
    });

    it('should have the property normdevrtt (base name: "normdevrtt")', function() {
      // uncomment below and update the code to test the property normdevrtt
      //var instane = new Localhost8088.RTPstat();
      //expect(instance).to.be();
    });

    it('should have the property remoteMaxjitter (base name: "remote_maxjitter")', function() {
      // uncomment below and update the code to test the property remoteMaxjitter
      //var instane = new Localhost8088.RTPstat();
      //expect(instance).to.be();
    });

    it('should have the property remoteMaxrxploss (base name: "remote_maxrxploss")', function() {
      // uncomment below and update the code to test the property remoteMaxrxploss
      //var instane = new Localhost8088.RTPstat();
      //expect(instance).to.be();
    });

    it('should have the property remoteMinjitter (base name: "remote_minjitter")', function() {
      // uncomment below and update the code to test the property remoteMinjitter
      //var instane = new Localhost8088.RTPstat();
      //expect(instance).to.be();
    });

    it('should have the property remoteMinrxploss (base name: "remote_minrxploss")', function() {
      // uncomment below and update the code to test the property remoteMinrxploss
      //var instane = new Localhost8088.RTPstat();
      //expect(instance).to.be();
    });

    it('should have the property remoteNormdevjitter (base name: "remote_normdevjitter")', function() {
      // uncomment below and update the code to test the property remoteNormdevjitter
      //var instane = new Localhost8088.RTPstat();
      //expect(instance).to.be();
    });

    it('should have the property remoteNormdevrxploss (base name: "remote_normdevrxploss")', function() {
      // uncomment below and update the code to test the property remoteNormdevrxploss
      //var instane = new Localhost8088.RTPstat();
      //expect(instance).to.be();
    });

    it('should have the property remoteSsrc (base name: "remote_ssrc")', function() {
      // uncomment below and update the code to test the property remoteSsrc
      //var instane = new Localhost8088.RTPstat();
      //expect(instance).to.be();
    });

    it('should have the property remoteStdevjitter (base name: "remote_stdevjitter")', function() {
      // uncomment below and update the code to test the property remoteStdevjitter
      //var instane = new Localhost8088.RTPstat();
      //expect(instance).to.be();
    });

    it('should have the property remoteStdevrxploss (base name: "remote_stdevrxploss")', function() {
      // uncomment below and update the code to test the property remoteStdevrxploss
      //var instane = new Localhost8088.RTPstat();
      //expect(instance).to.be();
    });

    it('should have the property rtt (base name: "rtt")', function() {
      // uncomment below and update the code to test the property rtt
      //var instane = new Localhost8088.RTPstat();
      //expect(instance).to.be();
    });

    it('should have the property rxcount (base name: "rxcount")', function() {
      // uncomment below and update the code to test the property rxcount
      //var instane = new Localhost8088.RTPstat();
      //expect(instance).to.be();
    });

    it('should have the property rxjitter (base name: "rxjitter")', function() {
      // uncomment below and update the code to test the property rxjitter
      //var instane = new Localhost8088.RTPstat();
      //expect(instance).to.be();
    });

    it('should have the property rxoctetcount (base name: "rxoctetcount")', function() {
      // uncomment below and update the code to test the property rxoctetcount
      //var instane = new Localhost8088.RTPstat();
      //expect(instance).to.be();
    });

    it('should have the property rxploss (base name: "rxploss")', function() {
      // uncomment below and update the code to test the property rxploss
      //var instane = new Localhost8088.RTPstat();
      //expect(instance).to.be();
    });

    it('should have the property stdevrtt (base name: "stdevrtt")', function() {
      // uncomment below and update the code to test the property stdevrtt
      //var instane = new Localhost8088.RTPstat();
      //expect(instance).to.be();
    });

    it('should have the property txcount (base name: "txcount")', function() {
      // uncomment below and update the code to test the property txcount
      //var instane = new Localhost8088.RTPstat();
      //expect(instance).to.be();
    });

    it('should have the property txjitter (base name: "txjitter")', function() {
      // uncomment below and update the code to test the property txjitter
      //var instane = new Localhost8088.RTPstat();
      //expect(instance).to.be();
    });

    it('should have the property txoctetcount (base name: "txoctetcount")', function() {
      // uncomment below and update the code to test the property txoctetcount
      //var instane = new Localhost8088.RTPstat();
      //expect(instance).to.be();
    });

    it('should have the property txploss (base name: "txploss")', function() {
      // uncomment below and update the code to test the property txploss
      //var instane = new Localhost8088.RTPstat();
      //expect(instance).to.be();
    });

  });

}));
