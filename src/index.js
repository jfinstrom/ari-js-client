/**
 * localhost:8088
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 6.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from './ApiClient';
import Application from './model/Application';
import ApplicationMoveFailed from './model/ApplicationMoveFailed';
import ApplicationReplaced from './model/ApplicationReplaced';
import AsteriskInfo from './model/AsteriskInfo';
import AsteriskPing from './model/AsteriskPing';
import Binary from './model/Binary';
import Bridge from './model/Bridge';
import BridgeAttendedTransfer from './model/BridgeAttendedTransfer';
import BridgeBlindTransfer from './model/BridgeBlindTransfer';
import BridgeCreated from './model/BridgeCreated';
import BridgeDestroyed from './model/BridgeDestroyed';
import BridgeMerged from './model/BridgeMerged';
import BridgeVideoSourceChanged from './model/BridgeVideoSourceChanged';
import BuildInfo from './model/BuildInfo';
import CallerID from './model/CallerID';
import Channel from './model/Channel';
import ChannelCallerId from './model/ChannelCallerId';
import ChannelConnectedLine from './model/ChannelConnectedLine';
import ChannelCreated from './model/ChannelCreated';
import ChannelDestroyed from './model/ChannelDestroyed';
import ChannelDialplan from './model/ChannelDialplan';
import ChannelDtmfReceived from './model/ChannelDtmfReceived';
import ChannelEnteredBridge from './model/ChannelEnteredBridge';
import ChannelHangupRequest from './model/ChannelHangupRequest';
import ChannelHold from './model/ChannelHold';
import ChannelLeftBridge from './model/ChannelLeftBridge';
import ChannelStateChange from './model/ChannelStateChange';
import ChannelTalkingFinished from './model/ChannelTalkingFinished';
import ChannelTalkingStarted from './model/ChannelTalkingStarted';
import ChannelUnhold from './model/ChannelUnhold';
import ChannelUserevent from './model/ChannelUserevent';
import ChannelVarset from './model/ChannelVarset';
import ConfigInfo from './model/ConfigInfo';
import ConfigTuple from './model/ConfigTuple';
import ContactInfo from './model/ContactInfo';
import ContactStatusChange from './model/ContactStatusChange';
import Containers from './model/Containers';
import DeviceState from './model/DeviceState';
import DeviceStateChanged from './model/DeviceStateChanged';
import Dial from './model/Dial';
import Dialed from './model/Dialed';
import DialplanCEP from './model/DialplanCEP';
import Endpoint from './model/Endpoint';
import EndpointStateChange from './model/EndpointStateChange';
import Event from './model/Event';
import FormatLangPair from './model/FormatLangPair';
import LiveRecording from './model/LiveRecording';
import LogChannel from './model/LogChannel';
import Mailbox from './model/Mailbox';
import Message from './model/Message';
import MissingParams from './model/MissingParams';
import Module from './model/Module';
import Peer from './model/Peer';
import PeerStatusChange from './model/PeerStatusChange';
import Playback from './model/Playback';
import PlaybackContinuing from './model/PlaybackContinuing';
import PlaybackFinished from './model/PlaybackFinished';
import PlaybackStarted from './model/PlaybackStarted';
import RTPstat from './model/RTPstat';
import RecordingFailed from './model/RecordingFailed';
import RecordingFinished from './model/RecordingFinished';
import RecordingStarted from './model/RecordingStarted';
import SetId from './model/SetId';
import Sound from './model/Sound';
import StasisEnd from './model/StasisEnd';
import StasisStart from './model/StasisStart';
import StatusInfo from './model/StatusInfo';
import StoredRecording from './model/StoredRecording';
import SystemInfo from './model/SystemInfo';
import TextMessage from './model/TextMessage';
import TextMessageReceived from './model/TextMessageReceived';
import Variable from './model/Variable';
import ApplicationsApi from './api/ApplicationsApi';
import AsteriskApi from './api/AsteriskApi';
import BridgesApi from './api/BridgesApi';
import ChannelsApi from './api/ChannelsApi';
import DeviceStatesApi from './api/DeviceStatesApi';
import EndpointsApi from './api/EndpointsApi';
import EventsApi from './api/EventsApi';
import MailboxesApi from './api/MailboxesApi';
import PlaybacksApi from './api/PlaybacksApi';
import RecordingsApi from './api/RecordingsApi';
import SoundsApi from './api/SoundsApi';

/**
* Object.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var Localhost8088 = require('index'); // See note below*.
* var xxxSvc = new Localhost8088.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new Localhost8088.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new Localhost8088.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new Localhost8088.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 6.0.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Application model constructor.
     * @property {module:model/Application}
     */
    Application,

    /**
     * The ApplicationMoveFailed model constructor.
     * @property {module:model/ApplicationMoveFailed}
     */
    ApplicationMoveFailed,

    /**
     * The ApplicationReplaced model constructor.
     * @property {module:model/ApplicationReplaced}
     */
    ApplicationReplaced,

    /**
     * The AsteriskInfo model constructor.
     * @property {module:model/AsteriskInfo}
     */
    AsteriskInfo,

    /**
     * The AsteriskPing model constructor.
     * @property {module:model/AsteriskPing}
     */
    AsteriskPing,

    /**
     * The Binary model constructor.
     * @property {module:model/Binary}
     */
    Binary,

    /**
     * The Bridge model constructor.
     * @property {module:model/Bridge}
     */
    Bridge,

    /**
     * The BridgeAttendedTransfer model constructor.
     * @property {module:model/BridgeAttendedTransfer}
     */
    BridgeAttendedTransfer,

    /**
     * The BridgeBlindTransfer model constructor.
     * @property {module:model/BridgeBlindTransfer}
     */
    BridgeBlindTransfer,

    /**
     * The BridgeCreated model constructor.
     * @property {module:model/BridgeCreated}
     */
    BridgeCreated,

    /**
     * The BridgeDestroyed model constructor.
     * @property {module:model/BridgeDestroyed}
     */
    BridgeDestroyed,

    /**
     * The BridgeMerged model constructor.
     * @property {module:model/BridgeMerged}
     */
    BridgeMerged,

    /**
     * The BridgeVideoSourceChanged model constructor.
     * @property {module:model/BridgeVideoSourceChanged}
     */
    BridgeVideoSourceChanged,

    /**
     * The BuildInfo model constructor.
     * @property {module:model/BuildInfo}
     */
    BuildInfo,

    /**
     * The CallerID model constructor.
     * @property {module:model/CallerID}
     */
    CallerID,

    /**
     * The Channel model constructor.
     * @property {module:model/Channel}
     */
    Channel,

    /**
     * The ChannelCallerId model constructor.
     * @property {module:model/ChannelCallerId}
     */
    ChannelCallerId,

    /**
     * The ChannelConnectedLine model constructor.
     * @property {module:model/ChannelConnectedLine}
     */
    ChannelConnectedLine,

    /**
     * The ChannelCreated model constructor.
     * @property {module:model/ChannelCreated}
     */
    ChannelCreated,

    /**
     * The ChannelDestroyed model constructor.
     * @property {module:model/ChannelDestroyed}
     */
    ChannelDestroyed,

    /**
     * The ChannelDialplan model constructor.
     * @property {module:model/ChannelDialplan}
     */
    ChannelDialplan,

    /**
     * The ChannelDtmfReceived model constructor.
     * @property {module:model/ChannelDtmfReceived}
     */
    ChannelDtmfReceived,

    /**
     * The ChannelEnteredBridge model constructor.
     * @property {module:model/ChannelEnteredBridge}
     */
    ChannelEnteredBridge,

    /**
     * The ChannelHangupRequest model constructor.
     * @property {module:model/ChannelHangupRequest}
     */
    ChannelHangupRequest,

    /**
     * The ChannelHold model constructor.
     * @property {module:model/ChannelHold}
     */
    ChannelHold,

    /**
     * The ChannelLeftBridge model constructor.
     * @property {module:model/ChannelLeftBridge}
     */
    ChannelLeftBridge,

    /**
     * The ChannelStateChange model constructor.
     * @property {module:model/ChannelStateChange}
     */
    ChannelStateChange,

    /**
     * The ChannelTalkingFinished model constructor.
     * @property {module:model/ChannelTalkingFinished}
     */
    ChannelTalkingFinished,

    /**
     * The ChannelTalkingStarted model constructor.
     * @property {module:model/ChannelTalkingStarted}
     */
    ChannelTalkingStarted,

    /**
     * The ChannelUnhold model constructor.
     * @property {module:model/ChannelUnhold}
     */
    ChannelUnhold,

    /**
     * The ChannelUserevent model constructor.
     * @property {module:model/ChannelUserevent}
     */
    ChannelUserevent,

    /**
     * The ChannelVarset model constructor.
     * @property {module:model/ChannelVarset}
     */
    ChannelVarset,

    /**
     * The ConfigInfo model constructor.
     * @property {module:model/ConfigInfo}
     */
    ConfigInfo,

    /**
     * The ConfigTuple model constructor.
     * @property {module:model/ConfigTuple}
     */
    ConfigTuple,

    /**
     * The ContactInfo model constructor.
     * @property {module:model/ContactInfo}
     */
    ContactInfo,

    /**
     * The ContactStatusChange model constructor.
     * @property {module:model/ContactStatusChange}
     */
    ContactStatusChange,

    /**
     * The Containers model constructor.
     * @property {module:model/Containers}
     */
    Containers,

    /**
     * The DeviceState model constructor.
     * @property {module:model/DeviceState}
     */
    DeviceState,

    /**
     * The DeviceStateChanged model constructor.
     * @property {module:model/DeviceStateChanged}
     */
    DeviceStateChanged,

    /**
     * The Dial model constructor.
     * @property {module:model/Dial}
     */
    Dial,

    /**
     * The Dialed model constructor.
     * @property {module:model/Dialed}
     */
    Dialed,

    /**
     * The DialplanCEP model constructor.
     * @property {module:model/DialplanCEP}
     */
    DialplanCEP,

    /**
     * The Endpoint model constructor.
     * @property {module:model/Endpoint}
     */
    Endpoint,

    /**
     * The EndpointStateChange model constructor.
     * @property {module:model/EndpointStateChange}
     */
    EndpointStateChange,

    /**
     * The Event model constructor.
     * @property {module:model/Event}
     */
    Event,

    /**
     * The FormatLangPair model constructor.
     * @property {module:model/FormatLangPair}
     */
    FormatLangPair,

    /**
     * The LiveRecording model constructor.
     * @property {module:model/LiveRecording}
     */
    LiveRecording,

    /**
     * The LogChannel model constructor.
     * @property {module:model/LogChannel}
     */
    LogChannel,

    /**
     * The Mailbox model constructor.
     * @property {module:model/Mailbox}
     */
    Mailbox,

    /**
     * The Message model constructor.
     * @property {module:model/Message}
     */
    Message,

    /**
     * The MissingParams model constructor.
     * @property {module:model/MissingParams}
     */
    MissingParams,

    /**
     * The Module model constructor.
     * @property {module:model/Module}
     */
    Module,

    /**
     * The Peer model constructor.
     * @property {module:model/Peer}
     */
    Peer,

    /**
     * The PeerStatusChange model constructor.
     * @property {module:model/PeerStatusChange}
     */
    PeerStatusChange,

    /**
     * The Playback model constructor.
     * @property {module:model/Playback}
     */
    Playback,

    /**
     * The PlaybackContinuing model constructor.
     * @property {module:model/PlaybackContinuing}
     */
    PlaybackContinuing,

    /**
     * The PlaybackFinished model constructor.
     * @property {module:model/PlaybackFinished}
     */
    PlaybackFinished,

    /**
     * The PlaybackStarted model constructor.
     * @property {module:model/PlaybackStarted}
     */
    PlaybackStarted,

    /**
     * The RTPstat model constructor.
     * @property {module:model/RTPstat}
     */
    RTPstat,

    /**
     * The RecordingFailed model constructor.
     * @property {module:model/RecordingFailed}
     */
    RecordingFailed,

    /**
     * The RecordingFinished model constructor.
     * @property {module:model/RecordingFinished}
     */
    RecordingFinished,

    /**
     * The RecordingStarted model constructor.
     * @property {module:model/RecordingStarted}
     */
    RecordingStarted,

    /**
     * The SetId model constructor.
     * @property {module:model/SetId}
     */
    SetId,

    /**
     * The Sound model constructor.
     * @property {module:model/Sound}
     */
    Sound,

    /**
     * The StasisEnd model constructor.
     * @property {module:model/StasisEnd}
     */
    StasisEnd,

    /**
     * The StasisStart model constructor.
     * @property {module:model/StasisStart}
     */
    StasisStart,

    /**
     * The StatusInfo model constructor.
     * @property {module:model/StatusInfo}
     */
    StatusInfo,

    /**
     * The StoredRecording model constructor.
     * @property {module:model/StoredRecording}
     */
    StoredRecording,

    /**
     * The SystemInfo model constructor.
     * @property {module:model/SystemInfo}
     */
    SystemInfo,

    /**
     * The TextMessage model constructor.
     * @property {module:model/TextMessage}
     */
    TextMessage,

    /**
     * The TextMessageReceived model constructor.
     * @property {module:model/TextMessageReceived}
     */
    TextMessageReceived,

    /**
     * The Variable model constructor.
     * @property {module:model/Variable}
     */
    Variable,

    /**
    * The ApplicationsApi service constructor.
    * @property {module:api/ApplicationsApi}
    */
    ApplicationsApi,

    /**
    * The AsteriskApi service constructor.
    * @property {module:api/AsteriskApi}
    */
    AsteriskApi,

    /**
    * The BridgesApi service constructor.
    * @property {module:api/BridgesApi}
    */
    BridgesApi,

    /**
    * The ChannelsApi service constructor.
    * @property {module:api/ChannelsApi}
    */
    ChannelsApi,

    /**
    * The DeviceStatesApi service constructor.
    * @property {module:api/DeviceStatesApi}
    */
    DeviceStatesApi,

    /**
    * The EndpointsApi service constructor.
    * @property {module:api/EndpointsApi}
    */
    EndpointsApi,

    /**
    * The EventsApi service constructor.
    * @property {module:api/EventsApi}
    */
    EventsApi,

    /**
    * The MailboxesApi service constructor.
    * @property {module:api/MailboxesApi}
    */
    MailboxesApi,

    /**
    * The PlaybacksApi service constructor.
    * @property {module:api/PlaybacksApi}
    */
    PlaybacksApi,

    /**
    * The RecordingsApi service constructor.
    * @property {module:api/RecordingsApi}
    */
    RecordingsApi,

    /**
    * The SoundsApi service constructor.
    * @property {module:api/SoundsApi}
    */
    SoundsApi
};
