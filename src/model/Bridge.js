/**
 * localhost:8088
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 6.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
* The Bridge model module.
* @module model/Bridge
* @version 6.0.0
*/
export default class Bridge {
    /**
    * Constructs a new <code>Bridge</code>.
    * The merging of media from one or more channels.  Everyone on the bridge receives the same audio.
    * @alias module:model/Bridge
    * @class
    * @param bridgeClass {String} Bridging class
    * @param bridgeType {String} Type of bridge technology
    * @param channels {Array.<String>} Ids of channels participating in this bridge
    * @param creationtime {Date} Timestamp when bridge was created
    * @param creator {String} Entity that created the bridge
    * @param id {String} Unique identifier for this bridge
    * @param name {String} Name the creator gave the bridge
    * @param technology {String} Name of the current bridging technology
    */

    constructor(bridgeClass, bridgeType, channels, creationtime, creator, id, name, technology) {
        
        
        this['bridge_class'] = bridgeClass;
        this['bridge_type'] = bridgeType;
        this['channels'] = channels;
        this['creationtime'] = creationtime;
        this['creator'] = creator;
        this['id'] = id;
        this['name'] = name;
        this['technology'] = technology;
        
    }

    /**
    * Constructs a <code>Bridge</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/Bridge} obj Optional instance to populate.
    * @return {module:model/Bridge} The populated <code>Bridge</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Bridge();
                        
            
            if (data.hasOwnProperty('bridge_class')) {
                obj['bridge_class'] = ApiClient.convertToType(data['bridge_class'], 'String');
            }
            if (data.hasOwnProperty('bridge_type')) {
                obj['bridge_type'] = ApiClient.convertToType(data['bridge_type'], 'String');
            }
            if (data.hasOwnProperty('channels')) {
                obj['channels'] = ApiClient.convertToType(data['channels'], ['String']);
            }
            if (data.hasOwnProperty('creationtime')) {
                obj['creationtime'] = ApiClient.convertToType(data['creationtime'], 'Date');
            }
            if (data.hasOwnProperty('creator')) {
                obj['creator'] = ApiClient.convertToType(data['creator'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('technology')) {
                obj['technology'] = ApiClient.convertToType(data['technology'], 'String');
            }
            if (data.hasOwnProperty('video_mode')) {
                obj['video_mode'] = ApiClient.convertToType(data['video_mode'], 'String');
            }
            if (data.hasOwnProperty('video_source_id')) {
                obj['video_source_id'] = ApiClient.convertToType(data['video_source_id'], 'String');
            }
        }
        return obj;
    }

    /**
    * Bridging class
    * @member {String} bridge_class
    */
    'bridge_class' = undefined;
    /**
    * Type of bridge technology
    * @member {String} bridge_type
    */
    'bridge_type' = undefined;
    /**
    * Ids of channels participating in this bridge
    * @member {Array.<String>} channels
    */
    'channels' = undefined;
    /**
    * Timestamp when bridge was created
    * @member {Date} creationtime
    */
    'creationtime' = undefined;
    /**
    * Entity that created the bridge
    * @member {String} creator
    */
    'creator' = undefined;
    /**
    * Unique identifier for this bridge
    * @member {String} id
    */
    'id' = undefined;
    /**
    * Name the creator gave the bridge
    * @member {String} name
    */
    'name' = undefined;
    /**
    * Name of the current bridging technology
    * @member {String} technology
    */
    'technology' = undefined;
    /**
    * The video mode the bridge is using. One of 'none', 'talker', or 'single'.
    * @member {String} video_mode
    */
    'video_mode' = undefined;
    /**
    * The ID of the channel that is the source of video in this bridge, if one exists.
    * @member {String} video_source_id
    */
    'video_source_id' = undefined;




}
