/**
 * Asterisk ARI
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 6.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
* The TextMessage model module.
* @module model/TextMessage
* @version 6.0.0
*/
export default class TextMessage {
    /**
    * Constructs a new <code>TextMessage</code>.
    * A text message.
    * @alias module:model/TextMessage
    * @class
    * @param body {String} The text of the message.
    * @param from {String} A technology specific URI specifying the source of the message. For sip and pjsip technologies, any SIP URI can be specified. For xmpp, the URI must correspond to the client connection being used to send the message.
    * @param to {String} A technology specific URI specifying the destination of the message. Valid technologies include sip, pjsip, and xmp. The destination of a message should be an endpoint.
    */

    constructor(body, from, to) {
        
        
        this['body'] = body;
        this['from'] = from;
        this['to'] = to;
        
    }

    /**
    * Constructs a <code>TextMessage</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/TextMessage} obj Optional instance to populate.
    * @return {module:model/TextMessage} The populated <code>TextMessage</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TextMessage();
                        
            
            if (data.hasOwnProperty('body')) {
                obj['body'] = ApiClient.convertToType(data['body'], 'String');
            }
            if (data.hasOwnProperty('from')) {
                obj['from'] = ApiClient.convertToType(data['from'], 'String');
            }
            if (data.hasOwnProperty('to')) {
                obj['to'] = ApiClient.convertToType(data['to'], 'String');
            }
            if (data.hasOwnProperty('variables')) {
                obj['variables'] = ApiClient.convertToType(data['variables'], Object);
            }
        }
        return obj;
    }

    /**
    * The text of the message.
    * @member {String} body
    */
    'body' = undefined;
    /**
    * A technology specific URI specifying the source of the message. For sip and pjsip technologies, any SIP URI can be specified. For xmpp, the URI must correspond to the client connection being used to send the message.
    * @member {String} from
    */
    'from' = undefined;
    /**
    * A technology specific URI specifying the destination of the message. Valid technologies include sip, pjsip, and xmp. The destination of a message should be an endpoint.
    * @member {String} to
    */
    'to' = undefined;
    /**
    * Technology specific key/value pairs (JSON object) associated with the message.
    * @member {Object} variables
    */
    'variables' = undefined;




}
